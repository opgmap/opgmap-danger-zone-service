eureka:
  instance:
    hostname: ${EUREKA_CLIENT_HOST}
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_URL}/eureka/
    fetch-registry: true

spring:

  application:
    name: DANGER-ZONE-SERVICE

  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    url: ${POSTGRES_URL}/${POSTGRES_DB}?createDatabaseIfNotExist=true

  liquibase:
    change-log: classpath:changelog/changelog-master.yml

  jpa:
    hibernate:
      ddl-auto: none

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_REALM_URL}/protocol/openid-connect/certs

management:
  endpoints:
    web:
      exposure:
        include: '*'

springdoc:
  swagger-ui:
    oauth:
      clientId: ${SPRING_DOC_OAUTH2_CLIENT_ID}
      clientSecret: ${SPRING_DOC_OAUTH2_CLIENT_SECRET}
      use-pkce-with-authorization-code-grant: true
  oAuthFlow:
    authorizationUrl: ${SPRINGDOC_KEYCLOAK_REALM_URL}/protocol/openid-connect/auth
    tokenUrl: ${SPRINGDOC_KEYCLOAK_REALM_URL}/protocol/openid-connect/token